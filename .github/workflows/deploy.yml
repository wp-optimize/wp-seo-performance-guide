name: Deploy to GitHub Pages

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: pages
  cancel-in-progress: false

jobs:
  test-deploy:
    if: github.event_name != 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - name: enable corepack and set yarn version to latest stable
        run: |
          corepack enable
          yarn set version 3.6.1
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Test build website
        run: yarn build

  deploy:
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: yarn
      - name: enable corepack and set yarn version to latest stable
        run: |
          corepack enable
          yarn set version 3.6.1
      - uses: webfactory/ssh-agent@v0.5.0
        with:
          ssh-private-key: ${{ secrets.GH_PAGES_DEPLOY }}
      - name: Install dependencies
        run: yarn install --frozen-lockfile
      - name: Build website
        run: yarn build
      - name: Set organization variable
        run: echo "ORG_NAME=$(echo $GITHUB_REPOSITORY | cut -d'/' -f1)" >> $GITHUB_ENV
      # - name: Clone target repository
      #   run: git clone git@github.com:${{ env.ORG_NAME }}/${{ env.ORG_NAME }}.github.io.git
      # - name: Clean target repository
      #   run: |
      #     cd ${{ env.ORG_NAME }}.github.io
      #     git rm -rf .
      #     git clean -fxd
      # - name: Copy build artifacts
      #   run: cp -a build/. ${{ env.ORG_NAME }}.github.io/
      # - name: Commit and push changes
      #   run: |
      #     cd ${{ env.ORG_NAME }}.github.io
      #     git config user.email "actions@github.com"
      #     git config user.name "gh-actions"
      #     git add .
      #     git commit -m "Deploy site $(date +'%Y-%m-%d %H:%M:%S')"
      #     git push origin main
      - name: Deploy to GitHub Pages
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: build # The folder the action should deploy
          repository-name: ${{ env.ORG_NAME }}/${{ env.ORG_NAME }}.github.io
          ssh-key: ${{ secrets.GH_PAGES_DEPLOY }}
          branch: main
          # branch: gh-pages
          # clean: true